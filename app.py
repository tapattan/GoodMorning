import streamlit as st
import datetime
import pandas as pd 

def get_weekdays_in_year(year):
    
    today = datetime.date.today()
    
    # ‡∏´‡∏≤‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏µ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
    if year == today.year:
        last_day = today
    else:
        last_day = datetime.date(year, 12, 31)  # ‡πÉ‡∏ä‡πâ‡∏ß‡∏±‡∏ô‡∏™‡∏¥‡πâ‡∏ô‡∏õ‡∏µ
    
    weeks_data = {}

    # ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 1 ‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏°‡∏ñ‡∏∂‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà last_day
    current_day = datetime.date(year, 1, 1)
    while current_day <= last_day:
        iso_year, iso_week, iso_weekday = current_day.isocalendar()
        
        # ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ß‡∏±‡∏ô‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå-‡∏®‡∏∏‡∏Å‡∏£‡πå
        if iso_weekday in range(0, 6):  # 1 = ‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå, 5 = ‡∏®‡∏∏‡∏Å‡∏£‡πå
            if iso_week not in weeks_data:
                weeks_data[iso_week] = []
            weeks_data[iso_week].append(current_day)
        
        current_day += datetime.timedelta(days=1)
    
    return weeks_data


st.set_page_config(page_title="CSV Viewer", layout="wide")

st.sidebar.title("üìå ‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å")
menu = st.sidebar.radio(
    "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏ô‡∏π",
    ["üìä Relative Strength", "üìÇ Short Sell", "‚ÑπÔ∏è ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö"]
)

if menu == "üìä Relative Strength":
    st.title('Relative Strength Rating ‡∏Ç‡∏≠‡∏á William O‚ÄôNeil')
    st.subheader('‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå')

    year_selected = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏µ", [2025,2024])

    weeks_data = get_weekdays_in_year(year_selected)

    week_selected = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå", list(weeks_data.keys()))

    st.write(f"‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: ‡∏õ‡∏µ {year_selected}, ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ó‡∏µ‡πà {week_selected}")
    #st.write("‡∏ß‡∏±‡∏ô‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå - ‡∏®‡∏∏‡∏Å‡∏£‡πå ‡πÉ‡∏ô‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ô‡∏µ‡πâ:", 
    #         [d.strftime('%Y-%m-%d') for d in weeks_data[week_selected]])

    df = pd.read_csv(f'rs_datasources/{year_selected}-week{week_selected}.csv')

    # ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    N = week_selected
    s1 = weeks_data[N][0].strftime('%Y-%m-%d')
    s2 = weeks_data[N][-1].strftime('%Y-%m-%d')
    st.write(f"Relative Strength Rating {s1}-{s2}")
    #st.dataframe(df[['no','symbol','return']])  # ‡πÉ‡∏ä‡πâ dataframe ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö scroll ‡πÑ‡∏î‡πâ
    rp = df[['no','symbol','return']]
    rp = rp.set_index('no')
    st.dataframe(rp, use_container_width=True)

if menu == 'üìÇ Short Sell':
   st.title('‡πÄ‡∏£‡πá‡∏ß‡πÜ ‡∏ô‡∏µ‡πâ ')
   
if menu == '‚ÑπÔ∏è ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö':
   st.title('‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô')
   st.write("""
    ‡∏û‡∏ö bug ‡πÅ‡∏à‡πâ‡∏á‡πÑ‡∏≠‡πÄ‡∏î‡∏µ‡∏¢‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÑ‡∏î‡πâ
    """) 